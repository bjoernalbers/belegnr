#!/bin/sh
# belegnr - Erzeugt fortlaufende, lückenlose Belegnummern für deine Buchhaltung

export PATH="/bin:/sbin:/usr/bin:/usr/sbin"

# Basename of this script
script_name="${0##*/}"

# Jede Belegnummer beginnt mit dieser Zeichenkette.
prefix="BE-"

# Die Zahl, ab der fortlaufende Belegnummern erzeugt werden.
start=1000

# In dieser Datei wird die zuletzt erzeugte Belegnummer gespeichert.
file="${HOME}/.belegnr"

# Display usage.
display_usage() {
cat <<EOM
Usage: ${script_name} [OPTIONS]

Options:
  -f  File to store latest Belegnummer (default: ~/.belegnr)
  -h  Display usage and exit
EOM
}

# Bricht das Skript mit gegebener Fehlermeldung ab.
abort() {
	echo "${script_name}: $*" >&2
	exit 1
}

# Display usage and exit when no option is given.
if [ "$#" -eq 0 ]; then
	display_usage
	exit
fi

# Process options.
while getopts 'f:h' opt; do
	case "${opt}" in
		f)
			file="${OPTARG}"
			;;
		h)
			display_usage
			exit
			;;
		*)
			display_usage
			exit 1
			;;
	esac
done
shift $((OPTIND-1))

# Abbruch, wenn $HOME nicht gesetzt ist.
[ -n "${HOME}" ] || abort "Variable HOME ist nicht definiert oder leer."

# Lege Belegnummerndatei an, falls diese nicht existiert.
if [ ! -f "${file}" ]; then
	echo "${start}" > "${file}" || abort "${file} konnte nicht angelegt werden."
fi

# Lese Belegnummerndatei ein und prüfe, ob der Inhalt eine natürliche Zahl ist.
nr=$(cat "${file}") || abort "Datei ${file} konnte nicht gelesen werden."
[ "${nr}" -ge 0 ] 2> /dev/null || abort "Datei ${file} enthält keine gültige Belegnummer."

# Belegnummer inkrementieren, speichern und ausgeben.
nr=$((nr+1))
tmp=$(mktemp)
echo "${nr}" > "${tmp}" && mv "${tmp}" "${file}" || abort "${file} konnte nicht aktualisiert werden."
echo "${prefix}${nr}"
